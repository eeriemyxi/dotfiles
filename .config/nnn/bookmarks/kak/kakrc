# *** OPTIONS

# Set theme
colorscheme cosy-gruvbox
# Width of a tab
set-option global tabstop 4
# Indent with 4 spaces
set-option global indentwidth 4
# Always keep one line and three columns displayed around the cursor
set-option global scrolloff 1,3
# Display the status bar on top
set-option global ui_options ncurses_status_on_top=true
# Enable auto reload
set-option global autoreload yes
# Disable startup changelog
set-option global startup_info_version 10000000000
# Display line numbers
add-highlighter global/ number-lines -hlcursor
# Highlight trailing whitespace
add-highlighter global/ regex \h+$ 0:Error
# Softwrap long lines
add-highlighter global/ wrap -word -indent

# Change cursor color based on mode
hook global ModeChange .*:normal %{ set-face window PrimaryCursor rgb:fbf1c7,red }
hook global ModeChange .*:insert  %{ set-face window PrimaryCursor rgb:282828,rgb:fbf1c7+fg }

# *** PACKAGES

# Reasymotion
set-option global reasymotion_keys sfjklodwmbuyvrgtaqpcxz
declare-user-mode reasymotion
map global reasymotion s ":reasymotion-word<ret>" -docstring "jump to a word on the screen."
map global reasymotion l ":reasymotion-line<ret>" -docstring "jump to a line on the screen."
map global reasymotion r ":reasymotion-on-letter-to-word<ret>" -docstring "enter letter then target every word with the same initial" 

# Raindow brackets
    # set-option global rainbow_colors rgb:000000,rgb:FF0000+b rgb:FFFFFF+b rgb:FFa500 rgb:FFFF00 rgb:00FF00 rgb:0000FF rgb:8B00FF rgb:EE42EE
set-option global rainbow_colors rgb:FF0000+b rgb:FFFFFF+b rgb:FFa500 rgb:FFFF00 rgb:00FF00 rgb:0000FF rgb:8B00FF rgb:EE42EE
hook global WinCreate .* %{ rainbow-enable-window }

# Clipboard manager
hook global WinCreate .* %{ kakboard-enable }

# Tabs
set-option global tabs_modelinefmt '%val{cursor_line}:%val{cursor_char_column} {{mode_info}} '
set-option global tabs_options --minified
map global tabs a "ga" -docstring "↔ alternate"
map global tabs h ":tabs-command prev<ret>" -docstring "← prev"
map global tabs i ":tabs-command next<ret>" -docstring "→ next"
map global tabs e ":tabs-command first<ret>" -docstring "↑ first"
map global tabs n ":tabs-command last<ret>" -docstring "↓ last"

# UI.kak
hook global WinCreate .* %{
    ui-line-numbers-toggle
    ui-cursorline-toggle
    ui-trailing-spaces-toggle
    ui-matching-toggle
    ui-todos-toggle
    ui-search-toggle
}

# Auto-save
hook global BufCreate /.* %{
    hook buffer NormalIdle .* %{
        try %{
            eval %sh{ [ "$kak_modified" = false ] && printf 'fail' }
            write
        }
    }
}

# # Auto-wrap
# hook global WinCreate .*\.(md|txt) %{
#     set window autowrap_column 89
#     autowrap-enable
# }

# NOTE: define it in the autowrap.kak file from default rc
#	define-command autowrap-buf-enable -docstring "Automatically wrap the lines in which characters are inserted" %{
#	    hook -group autowrap buffer InsertChar [^\n] autowrap-cursor
#	}
hook global BufCreate '\*scratch\*' %{
	set buffer autowrap_column 89
	autowrap-buf-enable
}

# Empty scratch pad
hook global BufCreate '\*scratch\*' %{
    execute-keys '%<a-d>'
}

# Custom mapping
set-face global TodoComment bright-green,default+bF@Information
hook global WinDisplay .* %{escape_insert_setup}
map global insert <c-s-v> "execute-keys '<esc>y<esc>" -docstring "paste content"
map global insert <c-s> "<esc>:phantom-selection-add-selection<ret>i"
map global insert <a-f> "<esc>:phantom-selection-iterate-next<ret>i"
map global insert <a-F> "<esc>:phantom-selection-iterate-prev<ret>i"
map global insert <a-s> "<esc>:phantom-selection-select-all; phantom-selection-clear<ret>i"
map global insert <c-w> "<esc>bdi"
# TODO: find a way to do ctrl + backspace

# Custom commands
define-command open-nnn %{ nop %sh{ KAK_SESSION=$kak_session KAK_CLIENT=$kak_client wezterm cli split-pane --horizontal -- nnn -- "$kak_buffile"}}
define-command open-fzf %{ nop %sh{ KAK_SESSION=$kak_session KAK_CLIENT=$kak_client wezterm cli split-pane --horizontal -- fzf_kak}}

# Custom user mode (<space>)
declare-user-mode user-2
declare-user-mode user-make

map global user * '_yx10<s-j>s<c-r>"'
map global user x ":write-all-quit<ret>" -docstring "save and quit"
map global user r ":enter-user-mode reasymotion<ret>" -docstring "reasymotion"
map global user w ":format<ret>" -docstring "format file"
map global user t ":enter-user-mode tabs<ret>" -docstring "tab manager"
map global user T ":enter-user-mode -lock tabs<ret>" -docstring "(locked) tab manager"
map global user s ':enter-user-mode -lock mirror<ret>' -docstring 'mirror lock'
map global user m ":enter-user-mode user-make<ret>" -docstring "wrapper for make"
map global user c ":comment-line<ret>" -docstring "comment out selection"
map global user f ":open-nnn<ret>" -docstring "nnn file manager"
map global user d ":open-fzf<ret>" -docstring "(fzf) fuzzy file searcher"
map global user <space> ":enter-user-mode -lock user-2<ret>" -docstring "locked user mode 2"

map global user-2 n "<c-d>" -docstring "page (half) down"
map global user-2 N "<pagedown>" -docstring "page down"
map global user-2 e "<c-u>" -docstring "page (half) up"
map global user-2 E "<pageup>" -docstring "page up"
map global user-2 t "s\h+$<ret><a-d>" -docstring "trim trailing spaces"
map global user-2 w "|fold -sw89 -<ret>" -docstring "wrap to 89 length per column"

map global user-make n ":make-next-error<ret>" -docstring "next error"
map global user-make e ":make<ret>" -docstring "run"
map global user-make i ":make-previous-error<ret>" -docstring "prev error"

